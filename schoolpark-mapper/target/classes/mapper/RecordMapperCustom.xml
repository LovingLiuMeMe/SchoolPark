<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lovingliu.mapper.RecordMapperCustom">
    <resultMap id="BaseResultMap" type="cn.lovingliu.pojo.vo.RecordVO">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="creater_name" jdbcType="VARCHAR" property="createrName" />
        <result column="record_describe" jdbcType="VARCHAR" property="recordDescribe" />
        <result column="record_status" jdbcType="INTEGER" property="recordStatus" />
        <result column="amt" jdbcType="INTEGER" property="amt" />
        <result column="remark_type" jdbcType="INTEGER" property="remarkType" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
        <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
        <collection property="pictureVOList" ofType="cn.lovingliu.pojo.vo.PictureVO">
            <id column="picture_id" property="pictureId" jdbcType="INTEGER" />
            <result column="picture_name" property="pictureName" jdbcType="VARCHAR" />
            <result column="picture_order" property="pictureOrder" jdbcType="INTEGER" />
        </collection>
    </resultMap>

    <!-- 解决pageHelper 分页BUG-->
    <resultMap id="RecordVOList" type="cn.lovingliu.pojo.vo.RecordVO">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="creater_name" jdbcType="VARCHAR" property="createrName" />
        <result column="record_describe" jdbcType="VARCHAR" property="recordDescribe" />
        <result column="record_status" jdbcType="INTEGER" property="recordStatus" />
        <result column="amt" jdbcType="INTEGER" property="amt" />
        <result column="remark_type" jdbcType="INTEGER" property="remarkType" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
        <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
        <collection
                property="pictureVOList"
                column="recordId"
                select="selectPictureByRecordId"
                ofType="cn.lovingliu.pojo.vo.PictureVO">
            <id column="picture_id" property="pictureId" jdbcType="INTEGER" />
            <result column="picture_name" property="pictureName" jdbcType="VARCHAR" />
            <result column="picture_order" property="pictureOrder" jdbcType="INTEGER" />
        </collection>
    </resultMap>
    
    <select id="selectPictureByRecordId" parameterType="java.lang.Integer" resultType="cn.lovingliu.pojo.vo.PictureVO">
        select
            id as picture_id,
            picture_name,
            picture_order
        from school_park_pictures
        where record_id = #{recordId}
    </select>



    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        r.id as id,
        ru.username as user_name,
        pcu.username as creater_name,
        r.record_describe,
        r.record_status,
        r.amt,
        r.remark_type,
        r.remark,
        r.created_time,
        r.updated_time,
        p.id as picture_id,
        p.picture_name as picture_name,
        p.picture_order as picture_order
        from school_park_record r
        left join school_park_pictures p
        on r.id = p.record_id
        left join school_park_user ru
        on r.user_id = ru.id
        left join school_park_user pcu
        on r.creater_id = pcu.id
        where r.id = #{recordId}
    </select>

    <select id="selectListByParamsMap" parameterType="map" resultMap="RecordVOList">
        select
            r.id as id,
            ru.username as user_name,
            pcu.username as creater_name,
            r.record_describe,
            r.record_status,
            r.amt,
            r.remark_type,
            r.remark,
            r.created_time,
            r.updated_time,
            p.id as picture_id,
            p.picture_name as picture_name,
            p.picture_order as picture_order
        from school_park_record r
        left join school_park_pictures p
        on r.id = p.record_id
        left join school_park_user ru
        on r.user_id = ru.id
        left join school_park_user pcu
        on r.creater_id = pcu.id
        <where>
            <if test="paramsMap.userId != null">
                and r.user_id = #{paramsMap.userId}
            </if>
            <if test="paramsMap.createrId != null">
                and r.creater_id = #{paramsMap.createrId}
            </if>
            <if test="paramsMap.recordStatus != null">
                and r.record_status = #{paramsMap.recordStatus}
            </if>
        </where>
    </select>

    <update id="updateRecordStatusByPrimaryKey">
        update
            school_park_record
        set school_park_record = #{paramsMap.willChangeRecordStatus}
        where id = #{paramsMap.recordId}
    </update>
</mapper>